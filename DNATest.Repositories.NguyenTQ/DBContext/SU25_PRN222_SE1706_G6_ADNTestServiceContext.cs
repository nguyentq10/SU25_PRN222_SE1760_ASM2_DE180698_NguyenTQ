// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace DNATest.Repositories.NguyenTQ.Models;

public partial class SU25_PRN222_SE1706_G6_ADNTestServiceContext : DbContext
{
    public SU25_PRN222_SE1706_G6_ADNTestServiceContext()
    {
    }

    public SU25_PRN222_SE1706_G6_ADNTestServiceContext(DbContextOptions<SU25_PRN222_SE1706_G6_ADNTestServiceContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AppointmentLogTuTtc> AppointmentLogTuTtcs { get; set; }

    public virtual DbSet<AppointmentScheduleTuTtc> AppointmentScheduleTuTtcs { get; set; }

    public virtual DbSet<BookingMinhNdum> BookingMinhNda { get; set; }

    public virtual DbSet<FeedbackNguyenTq> FeedbackNguyenTqs { get; set; }

    public virtual DbSet<InvoiceMinhNdum> InvoiceMinhNda { get; set; }

    public virtual DbSet<KitDeliveryNguyenTq> KitDeliveryNguyenTqs { get; set; }

    public virtual DbSet<RelationshipTestThanhDc> RelationshipTestThanhDcs { get; set; }

    public virtual DbSet<SampleNhanTtt> SampleNhanTtts { get; set; }

    public virtual DbSet<SampleTestResultNhanTtt> SampleTestResultNhanTtts { get; set; }

    public virtual DbSet<ServicePriceListAnhThq> ServicePriceListAnhThqs { get; set; }

    public virtual DbSet<ServicesAnhThq> ServicesAnhThqs { get; set; }

    public virtual DbSet<TestResultThanhDc> TestResultThanhDcs { get; set; }

    public virtual DbSet<UserAccount> UserAccounts { get; set; }

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //        => optionsBuilder.UseSqlServer("Data Source=localhost;Initial Catalog=SU25_PRN222_SE1706_G6_ADNTestService;Persist Security Info=True;User ID=sa;Password=12345;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AppointmentLogTuTtc>(entity =>
        {
            entity.HasKey(e => e.AppointmentLogTuTtcid).HasName("PK__Appointm__2DAE3DD46355E455");

            entity.ToTable("AppointmentLogTuTTC");

            entity.Property(e => e.AppointmentLogTuTtcid).HasColumnName("AppointmentLogTuTTCID");
            entity.Property(e => e.AppointmentScheduleTuTtcid).HasColumnName("AppointmentScheduleTuTTCID");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LogText).HasColumnType("text");
            entity.Property(e => e.LogType)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.AppointmentScheduleTuTtc).WithMany(p => p.AppointmentLogTuTtcs)
                .HasForeignKey(d => d.AppointmentScheduleTuTtcid)
                .HasConstraintName("FK__Appointme__Appoi__2E1BDC42");
        });

        modelBuilder.Entity<AppointmentScheduleTuTtc>(entity =>
        {
            entity.HasKey(e => e.AppointmentScheduleTuTtcid).HasName("PK__Appointm__2E0A60160C216D88");

            entity.ToTable("AppointmentScheduleTuTTC");

            entity.Property(e => e.AppointmentScheduleTuTtcid).HasColumnName("AppointmentScheduleTuTTCID");
            entity.Property(e => e.AdditionalNote).HasColumnType("text");
            entity.Property(e => e.AppointmentDate).HasColumnType("datetime");
            entity.Property(e => e.BookingId).HasColumnName("BookingID");
            entity.Property(e => e.ConfirmedBy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.StaffInCharge)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");

            entity.HasOne(d => d.Booking).WithMany(p => p.AppointmentScheduleTuTtcs)
                .HasForeignKey(d => d.BookingId)
                .HasConstraintName("FK__Appointme__Booki__2A4B4B5E");

            entity.HasOne(d => d.UserAccount).WithMany(p => p.AppointmentScheduleTuTtcs)
                .HasForeignKey(d => d.UserAccountId)
                .HasConstraintName("FK__Appointme__UserA__2B3F6F97");
        });

        modelBuilder.Entity<BookingMinhNdum>(entity =>
        {
            entity.HasKey(e => e.BookingMinhNdaid).HasName("PK__BookingM__D75104A8C4DCA73B");

            entity.ToTable("BookingMinhNDA");

            entity.Property(e => e.BookingMinhNdaid).HasColumnName("BookingMinhNDAID");
            entity.Property(e => e.BookingType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Note).HasColumnType("text");
            entity.Property(e => e.PreferredTime).HasColumnType("datetime");
            entity.Property(e => e.RequestDate).HasColumnType("datetime");
            entity.Property(e => e.ServiceAnhThqid).HasColumnName("ServiceAnhTHQID");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TotalPrice).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");

            entity.HasOne(d => d.ServiceAnhThq).WithMany(p => p.BookingMinhNda)
                .HasForeignKey(d => d.ServiceAnhThqid)
                .HasConstraintName("FK__BookingMi__Servi__182C9B23");

            entity.HasOne(d => d.UserAccount).WithMany(p => p.BookingMinhNda)
                .HasForeignKey(d => d.UserAccountId)
                .HasConstraintName("FK__BookingMi__UserA__173876EA");
        });

        modelBuilder.Entity<FeedbackNguyenTq>(entity =>
        {
            entity.HasKey(e => e.FeedbackId).HasName("PK__Feedback__6A4BEDF61A585DA7");

            entity.ToTable("FeedbackNguyenTQ");

            entity.Property(e => e.FeedbackId).HasColumnName("FeedbackID");
            entity.Property(e => e.Comment).HasMaxLength(1000);
            entity.Property(e => e.FeedbackDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.KitDeliveryNguyenTqid).HasColumnName("KitDeliveryNguyenTQID");
            entity.Property(e => e.ServiceId).HasColumnName("ServiceID");
            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");

            entity.HasOne(d => d.KitDeliveryNguyenTq).WithMany(p => p.FeedbackNguyenTqs)
                .HasForeignKey(d => d.KitDeliveryNguyenTqid)
                .HasConstraintName("FK__FeedbackN__KitDe__36B12243");

            entity.HasOne(d => d.UserAccount).WithMany(p => p.FeedbackNguyenTqs)
                .HasForeignKey(d => d.UserAccountId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FeedbackN__UserA__37A5467C");
        });

        modelBuilder.Entity<InvoiceMinhNdum>(entity =>
        {
            entity.HasKey(e => e.InvoiceMinhNdaid).HasName("PK__InvoiceM__46006282E38A6349");

            entity.ToTable("InvoiceMinhNDA");

            entity.Property(e => e.InvoiceMinhNdaid).HasColumnName("InvoiceMinhNDAID");
            entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.BookingMinhNdaid).HasColumnName("BookingMinhNDAID");
            entity.Property(e => e.PaymentDate).HasColumnType("datetime");
            entity.Property(e => e.PaymentMethod).HasMaxLength(50);
            entity.Property(e => e.PaymentStatus).HasMaxLength(50);
            entity.Property(e => e.TransactionId)
                .HasMaxLength(100)
                .HasColumnName("Transaction_ID");

            entity.HasOne(d => d.BookingMinhNda).WithMany(p => p.InvoiceMinhNda)
                .HasForeignKey(d => d.BookingMinhNdaid)
                .HasConstraintName("FK__InvoiceMi__Booki__1B0907CE");
        });

        modelBuilder.Entity<KitDeliveryNguyenTq>(entity =>
        {
            entity.HasKey(e => e.KitDeliveryNguyenTqid).HasName("PK__KitDeliv__F2900504D3836A32");

            entity.ToTable("KitDeliveryNguyenTQ");

            entity.Property(e => e.KitDeliveryNguyenTqid).HasColumnName("KitDeliveryNguyenTQID");
            entity.Property(e => e.BookingMinhNdaid).HasColumnName("BookingMinhNDAID");
            entity.Property(e => e.CourierIn)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CourierOut)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DeliveryDate).HasColumnType("datetime");
            entity.Property(e => e.DeliveryNoteIn).HasMaxLength(255);
            entity.Property(e => e.DeliveryNoteOut).HasMaxLength(255);
            entity.Property(e => e.DeliveryStatusIn)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DeliveryStatusOut)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Fee).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.KitCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ReturnDate).HasColumnType("datetime");
            entity.Property(e => e.ReturnReason).HasMaxLength(255);
            entity.Property(e => e.TrackingNumberIn)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TrackingNumberOut)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.BookingMinhNda).WithMany(p => p.KitDeliveryNguyenTqs)
                .HasForeignKey(d => d.BookingMinhNdaid)
                .HasConstraintName("FK__KitDelive__Booki__31EC6D26");
        });

        modelBuilder.Entity<RelationshipTestThanhDc>(entity =>
        {
            entity.HasKey(e => e.RelationshipTestThanhDcid).HasName("PK__Relation__C37139694AB65229");

            entity.ToTable("RelationshipTestThanhDC");

            entity.Property(e => e.RelationshipTestThanhDcid).HasColumnName("RelationshipTestThanhDCID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.MatchProbability).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.RelationshipConclusion).HasMaxLength(100);
            entity.Property(e => e.RelationshipExpected).HasMaxLength(100);
            entity.Property(e => e.TestResultThanhDcid).HasColumnName("TestResultThanhDCID");

            entity.HasOne(d => d.TestResultThanhDc).WithMany(p => p.RelationshipTestThanhDcs)
                .HasForeignKey(d => d.TestResultThanhDcid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Relations__TestR__276EDEB3");
        });

        modelBuilder.Entity<SampleNhanTtt>(entity =>
        {
            entity.HasKey(e => e.SampleNhanTttid).HasName("PK__SampleNh__CD302BF4ED729606");

            entity.ToTable("SampleNhanTTT");

            entity.Property(e => e.SampleNhanTttid).HasColumnName("SampleNhanTTTID");
            entity.Property(e => e.BookingMinhNdaid).HasColumnName("BookingMinhNDAID");
            entity.Property(e => e.CollectedBy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CollectedDate).HasColumnType("datetime");
            entity.Property(e => e.Note).HasColumnType("text");
            entity.Property(e => e.ReceivedDate).HasColumnType("datetime");
            entity.Property(e => e.SampleCode)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.BookingMinhNda).WithMany(p => p.SampleNhanTtts)
                .HasForeignKey(d => d.BookingMinhNdaid)
                .HasConstraintName("FK__SampleNha__Booki__1DE57479");
        });

        modelBuilder.Entity<SampleTestResultNhanTtt>(entity =>
        {
            entity.HasKey(e => e.SampleTestResultNhanTttid).HasName("PK__SampleTe__357009245A22BCB6");

            entity.ToTable("SampleTestResultNhanTTT");

            entity.Property(e => e.SampleTestResultNhanTttid).HasColumnName("SampleTestResultNhanTTTID");
            entity.Property(e => e.AlenOne)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.AlenTwo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.GenLocus)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Note).HasColumnType("text");
            entity.Property(e => e.SampleNhanTttid).HasColumnName("SampleNhanTTTID");

            entity.HasOne(d => d.SampleNhanTtt).WithMany(p => p.SampleTestResultNhanTtts)
                .HasForeignKey(d => d.SampleNhanTttid)
                .HasConstraintName("FK__SampleTes__Sampl__20C1E124");
        });

        modelBuilder.Entity<ServicePriceListAnhThq>(entity =>
        {
            entity.HasKey(e => e.ServicePriceListAnhThqid).HasName("PK__ServiceP__626BFA437A6E6B4E");

            entity.ToTable("ServicePriceListAnhTHQ");

            entity.Property(e => e.ServicePriceListAnhThqid).HasColumnName("ServicePriceListAnhTHQID");
            entity.Property(e => e.AdditionalFee).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.BasePrice).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.EffectiveDate).HasColumnType("datetime");
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.ServiceAnhThqid).HasColumnName("ServiceAnhTHQID");

            entity.HasOne(d => d.ServiceAnhThq).WithMany(p => p.ServicePriceListAnhThqs)
                .HasForeignKey(d => d.ServiceAnhThqid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ServicePr__Servi__145C0A3F");
        });

        modelBuilder.Entity<ServicesAnhThq>(entity =>
        {
            entity.HasKey(e => e.ServiceAnhThqid).HasName("PK__Services__D07B05F48EE8CD96");

            entity.ToTable("ServicesAnhTHQ");

            entity.Property(e => e.ServiceAnhThqid).HasColumnName("ServiceAnhTHQID");
            entity.Property(e => e.Category).HasMaxLength(50);
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.ServiceName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ServiceType).HasMaxLength(50);
        });

        modelBuilder.Entity<TestResultThanhDc>(entity =>
        {
            entity.HasKey(e => e.TestResultThanhDcid).HasName("PK__TestResu__D113AF64249B52DB");

            entity.ToTable("TestResultThanhDC");

            entity.Property(e => e.TestResultThanhDcid).HasColumnName("TestResultThanhDCID");
            entity.Property(e => e.BookingMinhNdaid).HasColumnName("BookingMinhNDAID");
            entity.Property(e => e.Conclusion).HasColumnType("text");
            entity.Property(e => e.EvaluatedBy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MatchPercent).HasColumnType("decimal(10, 5)");
            entity.Property(e => e.Note).HasColumnType("text");
            entity.Property(e => e.ProbabilityPaternity).HasColumnType("decimal(10, 5)");
            entity.Property(e => e.ResultCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ResultDate).HasColumnType("datetime");

            entity.HasOne(d => d.BookingMinhNda).WithMany(p => p.TestResultThanhDcs)
                .HasForeignKey(d => d.BookingMinhNdaid)
                .HasConstraintName("FK__TestResul__Booki__239E4DCF");
        });

        modelBuilder.Entity<UserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId).HasName("PK__UserAcco__DA6C70BA93271830");

            entity.ToTable("UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RequestCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}